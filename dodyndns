#!/usr/bin/env python3

# dodydns
# update script for dynamic DNS hostname to the Digital Ocean nameservers

# User configurable data
API_TOKEN_FN = ".token"
API_DOMAIN = "sherms.co.uk"
API_ENDPOINT = "https://api.digitalocean.com/v2/domains/"

def get_ext_ip_opendns():
    import dns.resolver
    resolver = dns.resolver.Resolver()
    resolver.nameservers = ["208.67.220.220"]
    results = resolver.query('myip.opendns.com')
    ip = [result.to_text() for result in results][0]
    return ip

#dyn_ip_addr = '80.189.255.65'
dyn_ip_addr = get_ext_ip_opendns()

import requests, sys

# read DO API token file
with open(API_TOKEN_FN, 'r') as f:
    api_token = f.readline().strip()
# build the headers
http_headers = {"Authorization": "Bearer " + api_token }

# Does the domain exist on the DO DNS servers?
try:
    r = requests.get(API_ENDPOINT + API_DOMAIN, headers = http_headers).json()['domain']
except (KeyError, ValueError):
    print("Domain " + API_DOMAIN + " can't be found on the nameserver")
    sys.exit(-1)

# Get the ID of the A record
a_record_id = 0
s = requests.get(API_ENDPOINT + API_DOMAIN + "/records", headers = http_headers)
for i in s.json()['domain_records']:
    if i['type'] == 'A':
        a_record_id = i['id']
        break

# Update the correct record with the desired IP address
if a_record_id != 0:
    print("Updating A record")
    u = requests.put(API_ENDPOINT + API_DOMAIN + '/records/' + str(a_record_id), headers= http_headers, data='data: ' + dyn_ip_addr)
else:
    print("No A record exists on the nameserver for this domain")
    print("Creating a new record")
    c = requests.post(API_ENDPOINT + API_DOMAIN + "/records", headers = http_headers, data = {"type": "A", "name": "@", "data": dyn_ip_addr })


